label nloop
variable spacing index 100 #1.0 1.5 2.0 #1 #10 5

######################### Setting the sytem ####################################
# LJ conversion
variable T equal 3      # The temperature in LJ units
# Our length unit (set):
variable lengthunit equal 1e-9   # In SI
variable convert_energy_nanounits_to_ljunits equal 1e21
# Physical constants in SI:
variable kb equal 1.38064852e-23
variable epsilon0 equal 8.85e-12
variable elementalcharge equal 1.602176634e-19
variable T0 equal 310.0 # The temperature we want in K  # We will use this to find the energy unit, which we in turn will use to find the dielectric correction
# Converting
variable energyunit equal ${T0}/T*${kb}
#variable energyunit_ljinnano equal ${convert_energy_nanounits_to_ljunits}*${energyunit} # For conversion from units nano to units lj
variable energyunit_ljinnano equal 1.426670137333333  #### TRIED TO CALCULATE IN LAMMPS, BUT IT DIDN'T WORK ## For T = 3, T0 = 310
variable qratio equal 12.719558614248152
#variable qratio equal ${elementalcharge}/sqrt(4*PI*${epsilon0}*${lengthunit}*${energyunit})
#variable conversionfactor equal 1.0/${qratio}^2
variable conversionfactor equal 0.008818190747174473 #0.006180959786301432 (forgot to divide by E)

### Set variables
## Lennard-Jones interaction
variable ljparam equal 1.042 # Taken from Bathe GAG paper
variable ljcutoff equal 2.0^(1.0/6.0) 
variable sigma equal 1.0
## FENE
variable R0 equal 1.5
variable theta0 equal 180.0
variable R0sq equal ${R0}*${R0}
variable Kfene equal 30.0#${Kfenebase}/${R0sq} # First, I try to not scale this.
variable Kfenebase equal 30.0*${R0sq}
variable epsilon equal 1.042
variable fenesigma equal 1.0
## Harmonic angle
variable Kangle equal 20.0/${energyunit_ljinnano}
## Debye interaction
variable kappa equal 1.0
variable charge equal -1
variable debyecutoff equal 3.0
## General system
variable T equal 3
variable M equal 9
variable N equal 101
variable Ly equal 3
variable Nall equal $M*$N
variable mass equal 1
variable dt equal 0.00045                 # This timestep seems to work well for our simulations (standard ljunits timestep is too big)

#
units lj
dimension 3
boundary p p f
atom_style full
pair_style lj/cut/coul/debye ${kappa} ${ljcutoff} ${debyecutoff} 
#pair_modify shift yes # To have WCA
bond_style fene
special_bonds fene # Does not work on its own
angle_style harmonic

# Making the atoms:
read_data data.chaingrids_N${Nall}_Nchains$M_Ly${Ly}_gridspacing${spacing}_twofixed_charge${charge}#_mass${mass} # only mass for lg=300
log log.chaingrid_quadratic_M$MN$N_ljunits_gridspacing${spacing}_Langevin_wall_Kangle${Kangle}_KfeneR0sq${Kfenebase}_R0${R0}_feneepsilon${epsilon}_fenesigma${fenesigma}_debye_kappa${kappa}_debyecutoff${debyecutoff}_chargeelementary${charge}_effectivedielectric${conversionfactor}_T$T_theta0is180#_twofirst_are_fixed_with_rgyr # The filename will be very long

pair_coeff * * ${ljparam} ${sigma}
bond_coeff * ${Kfene} ${R0} ${epsilon} ${fenesigma} # For FENE only # epsilon=0
angle_coeff * ${Kangle} ${theta0}

############################ Setup #####################################

# Minimize really messes up the structure
#minimize 1.0e-4 1.0e-6 100 1000


dielectric ${conversionfactor}
timestep ${dt}

group movingmonomers type 2
group chain1 id 1:$N         # The atoms in chain 1
group chain2 id 102:202      # The atoms in chain 2
group chain3 id 203:303      # The atoms in chain 3
group chain4 id 304:404      # The atoms in chain 4
group chain5 id 405:505      # The atoms in chain 5
group chain6 id 506:606      # The atoms in chain 6
group chain7 id 607:707      # The atoms in chain 7
group chain8 id 708:808      # The atoms in chain 8
group chain9 id 809:909      # The atoms in chain 1

neighbor 1.0 bin
#neigh_modify once no every 1 delay 0 check yes

fix wallmembrane movingmonomers wall/lj126 zlo 0.0 ${epsilon} 1.0 2.5 units box

fix lgvfix movingmonomers langevin $T $T 100.0 699483
fix 1 movingmonomers nve

# The energy computes:
compute bendingenergy all pe angle
compute stretchingenergy all pe bond
compute coulombenergy all pe pair

# The radius of gyration computes:
compute rgyrchain1 chain1 gyration
compute rgyrchain2 chain2 gyration
compute rgyrchain3 chain3 gyration
compute rgyrchain4 chain4 gyration
compute rgyrchain5 chain5 gyration
compute rgyrchain6 chain6 gyration
compute rgyrchain7 chain7 gyration
compute rgyrchain8 chain8 gyration
compute rgyrchain9 chain9 gyration


############################ Equilibrate ##############################################
run 1333400

####################### Run and write to file #########################################

#dump 1 all custom 10000 chaingrid_quadratic_M$MN$N_gridspacing${spacing}_Langevin_nowall_Kangle${Kangle}_KfeneR0sq${Kfenebase}_R0${R0}_feneepsilon${epsilon}_fenesigma${fenesigma}_T$T_theta0is180_twofirst_are_fixed.lammpstrj id type x y z vx vy vz # For visualization
dump 1 all custom 10000 chaingrid_quadratic_M$MN$N_ljunits_gridspacing${spacing}_Langevin_wall_Kangle${Kangle}_KfeneR0sq${Kfenebase}_R0${R0}_feneepsilon${epsilon}_fenesigma${fenesigma}_debye_kappa${kappa}_debyecutoff${debyecutoff}_chargeelementary${charge}_effectivedielectric${conversionfactor}_T$T_theta0is180.lammpstrj id type mol x y z vx vy vz # For visualization
thermo_style custom step time temp pe ke etotal c_bendingenergy c_stretchingenergy c_coulombenergy c_rgyrchain1 c_rgyrchain2 c_rgyrchain3 c_rgyrchain4 c_rgyrchain5 c_rgyrchain6 c_rgyrchain7 c_rgyrchain8 c_rgyrchain9
thermo 10000
run 10000000
clear
next spacing
jump SELF nloop
