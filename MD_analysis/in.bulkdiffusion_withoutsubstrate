# Prime numbers over 19: 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109 og 113
# Loop
label nloop
variable seed loop 1 1000
#
variable dampfac equal 20
variable spacing equal 10#100
variable sigma_atom equal 1 # Vary this?
variable density equal 3/(4*PI)
variable volfac equal 4*PI/3
variable test equal ${density}*${volfac}
variable r3 equal ${sigma_atom}^3
print 'variable: ${density}'
print 'Volume factor: ${density}*${volfac}'
print 'dens*volfac ${test}'
print 'sigma_atom^3: ${r3}'
variable pmass equal 4*PI*${sigma_atom}^3/3*${density}

######################### Setting the sytem ####################################
## Getting conversion factors and constructing the dielectric
# Neccessary quantities in lj units:
variable T equal 3      # The temperature in LJ units
#variable vcomp equal sqrt($T)
# Our length unit (set):
variable lengthunit equal 1e-9   # In SI
variable convert_energy_nanounits_to_ljunits equal 1e21
# Physical constants in SI:
variable kb equal 1.38064852e-23
variable T0 equal 310.0 # The temperature we want in K  # We will use this to find the energy unit, which we in turn will use to find the dielectric correction
# Converting
variable energyunit equal ${T0}/T*${kb}
variable energyunit_ljinnano equal 1.426670137333333  #### TRIED TO CALCULATE IN LAMMPS, BUT IT DIDN'T WORK ## For T = 3, T0 = 310
variable conversionfactor equal 0.008818190747174473 #0.006180959786301432 (forgot to divide by E)
variable ljepsilon_standard equal 1.042
variable ljepsilon equal ${ljepsilon_standard}/${energyunit_ljinnano}
variable ljcutoff equal 1.122
variable ljsigma equal 1.0
variable atomcutoff equal 1.122*${sigma_atom}

print 'energyunit_ljinnano: ${energyunit_ljinnano}'

## Set variables
variable dt equal 0.00045                 # This timestep seems to work well for our simulations (standard ljunits timestep is too big)
#variable M equal 9
#variable N equal 101
#variable vzmin equal 0.00000001
#variable vzmax equal 0.01

# Setting system properties
units lj
dimension 3
boundary p p p
atom_style atomic
pair_style lj/cut ${ljcutoff}

# Making the atoms:
read_data data.bulkdiffusion_gridspacing${spacing}_mass1.5
#log log.bulkdiffusion_ljunits_spacing${spacing}_Langevin_T$T_pmass${pmass}_sect_placeexact_ljepsilon${ljepsilon}_ljcut1p122_seed${seed}
#log /home/kine/Projects_PhD/P2_PolymerMD/Planar_brush/Diffusion_bead_near_grid/Pure_bulk/Bulkdiffusion_ljunits_Langevin_scaled_T$T_ljcut1p122/Spacing${spacing}/Sigma_bead_${sigma_atom}/log.pmass${pmass}_seed${seed} # Whyyyyyyyyyy?
# Do I even use the log-file anymore?

#velocity all create $T 87287 # This seemingly does not work when there is only one atom

pair_coeff 1 1 ${ljepsilon} ${ljsigma} ${ljcutoff}

############################ Prepare simulation #####################################

neighbor 1.0 bin
#neigh_modify once no every 1 delay 0 check yes

timestep ${dt}

group freeatom type 1
#group movingatoms type 2 3

mass 1 ${pmass}

variable scalefac equal ${pmass}/${sigma_atom}
fix lgvfix all langevin $T $T ${dampfac} ${seed} scale 1 ${scalefac}
fix 1 all nve

velocity freeatom set 0 0 0 #${vcomp} ${vcomp} ${vcomp} 

############################ Run ##############################################
print 'seed ${seed}'
#dump 1 freeatom custom 100 /home/kine/Projects_PhD/P2_PolymerMD/Planar_brush/Diffusion_bead_near_grid/Pure_bulk/Bulkdiffusion_ljunits_Langevin_scaled_T$T_sect_placeexact_ljepsilon${ljepsilon}_ljcut1p122/Spacing${spacing}/Sigma_bead_${sigma_atom}/seed${seed}.lammpstrj id type xu yu zu vx vy vz # Maybe skip this? Only use it if I need to, at least.
print '/home/kine/Projects_PhD/P2_PolymerMD/Planar_brush/Diffusion_bead_near_grid/Spacing${spacing}/damp${dampfac}_diffseedLgv/Pure_bulk/Sigma_bead_${sigma_atom}/seed${seed}.lammpstrj'
dump 1 freeatom custom 100 /home/kine/Projects_PhD/P2_PolymerMD/Planar_brush/Diffusion_bead_near_grid/Spacing${spacing}/damp${dampfac}_diffseedLgv/Pure_bulk/Sigma_bead_${sigma_atom}/seed${seed}.lammpstrj id type xu yu zu vx vy vz

run 200000

clear
next seed
jump SELF nloop
